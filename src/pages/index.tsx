import { type NextPage } from 'next'
import Head from 'next/head'
import Link from 'next/link'
import { LightMode as LightModeIcon } from '@mui/icons-material'
import { DarkMode as DarkModeIcon } from '@mui/icons-material'

import Badges, { type TBadge } from '~/components/introduction/Badge'
import { useContext, useMemo } from 'react'
import clsx from 'clsx'
import { AppContext } from './_app'

const Home: NextPage = () => {
  const themeContext = useContext(AppContext)
  // const [themeContext.theme] = useState<'dark' | 'light'>('light')
  const badges = useMemo<TBadge[]>(() => {
    const randomId = () => (Math.random() + 1).toString(36).substring(8)
    return [
      {
        alt: 'Typescript',
        id: randomId(),
        width: 100,
        height: 22,
        image:
          'https://img.shields.io/badge/typescript-%23007ACC.svg?style=for-the-badge&logo=typescript&logoColor=white',
      },
      {
        alt: 'JavaScript',
        id: randomId(),
        width: 100,
        height: 22,
        image:
          'https://img.shields.io/badge/javascript-%23323330.svg?style=for-the-badge&logo=javascript&logoColor=%23F7DF1E',
      },
      {
        alt: 'Firebase',
        id: randomId(),
        width: 84.61,
        height: 22,
        image:
          'https://img.shields.io/badge/Firebase-039BE5?style=for-the-badge&logo=Firebase&logoColor=white',
      },
    ]
  }, [])

  function handleChangeTheme() {
    const toggleTheme = themeContext.theme === 'dark' ? 'light' : 'dark'
    return themeContext.setTheme(toggleTheme)
  }

  return (
    <>
      <Head>
        <title>PetchDev</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>
      <main
        className={clsx(
          'flex',
          'min-h-screen',
          'flex-col',
          'items-center',
          'justify-center',
          'bg-gradient-to-b',
          {
            'from-[#000000]': themeContext.theme === 'dark',
            'to-[#15162c]': themeContext.theme === 'dark',
          },
          {
            'from-slate-50': themeContext.theme === 'light',
            'to-slate-100': themeContext.theme === 'light',
          }
        )}
      >
        <div className="fixed right-4 top-4">
          <button
            aria-label="Change Mode"
            className={clsx(
              'rounded-full',
              'px-10',
              'py-3',
              'font-semibold',
              'no-underline',
              'transition',
              {
                'text-white': themeContext.theme === 'dark',
                'bg-white/10': themeContext.theme === 'dark',
                'hover:bg-white/20': themeContext.theme === 'dark',
              },
              {
                'text-black': themeContext.theme === 'light',
                'bg-black/10': themeContext.theme === 'light',
                'hover:bg-black/20': themeContext.theme === 'light',
              }
            )}
            onClick={() => handleChangeTheme()}
          >
            {themeContext.theme === 'dark' ? (
              <LightModeIcon className="text-white/80" />
            ) : (
              <DarkModeIcon className="text-black/80" />
            )}
          </button>
        </div>
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1
            className={clsx(
              'text-5xl',
              'font-extrabold',
              'tracking-tight',
              'sm:text-[5rem]',
              {
                'text-white': themeContext.theme === 'dark',
                'text-black/80': themeContext.theme === 'light',
              }
            )}
          >
            <span
              className={clsx({
                'text-[hsl(31,100%,64%)]': themeContext.theme === 'dark',
                'text-[hsl(31,71%,59%)]': themeContext.theme === 'light',
              })}
            >
              Petch
            </span>
            Dev
          </h1>
          <div className="grid grid-cols-1 gap-4 md:gap-8">
            <Link
              className={clsx(
                'flex',
                'max-w-md',
                'flex-col',
                'gap-4',
                'rounded-xl',
                'p-4',
                {
                  'bg-white/10': themeContext.theme === 'dark',
                  'text-white': themeContext.theme === 'dark',
                  'hover:bg-white/20': themeContext.theme === 'dark',
                  'bg-black/10': themeContext.theme === 'light',
                  'text-black': themeContext.theme === 'light',
                  'hover:bg-black/20': themeContext.theme === 'light',
                }
              )}
              href="https://github.com/weerachai06"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">My Profile</h3>
              <div className="text-lg">Hi, My name is Petch ðŸ‘‹</div>
              <ul className="text-sm">
                <li>ðŸ”­ Iâ€™m currently working on King Power Click</li>
                <li>
                  ðŸŒ± Iâ€™m currently learning flutter, docker, trpc and advanced
                  typescript
                </li>
              </ul>
              <div className="inline-flex justify-center gap-2 text-center">
                <Badges badges={badges} />
              </div>
            </Link>
          </div>
        </div>
      </main>
    </>
  )
}

export default Home
